import random
import array
from tkinter import *
import tkinter.messagebox as msg
import pyperclip

root = Tk()
root.geometry("890x690")
root.resizable(False, False)
root.configure(bg="#663399")
root.state("zoomed")
root.title("Password Generator")

master_var = IntVar()
pass_var = StringVar()
pass_len = IntVar()

DIGITS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
lower_Char = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
              'i', 'j', 'k', 'm', 'n', 'o', 'p', 'q',
              'r', 's', 't', 'u', 'v', 'w', 'x', 'y',
              'z']

upper_Char = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
              'I', 'J', 'K', 'M', 'N', 'O', 'P', 'Q',
              'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y',
              'Z']

SYMBOLS = ['@', '#', '$', '%', '=', ':', '?', '.', '/', '|', '~', '>',
           '*', '(', ')', '<']


def reset():
    pass_ent.delete(0, END)


def copy():
    pyperclip.copy(str(pass_var.get()))
    msg.showinfo("Copied", "Your Password has been saved in clipboard !")


def pass_gen():
    if pass_len.get() == 0:
        msg.showerror("Error", "Length should not be Empty")

    else:
        if master_var.get() == 4:
            max_len = pass_len.get()
            temp_pass_list = ""

            COMBINED_LIST = DIGITS + upper_Char + lower_Char + SYMBOLS

            rand_digit = random.choice(DIGITS)
            rand_upper = random.choice(upper_Char)
            rand_lower = random.choice(lower_Char)
            rand_symbol = random.choice(SYMBOLS)

            temp_pass = rand_digit + rand_upper + rand_lower + rand_symbol

            for x in range(max_len - 4):
                temp_pass = temp_pass + random.choice(COMBINED_LIST)

                temp_pass_list = array.array('u', temp_pass)
                random.shuffle(temp_pass_list)

            password = ""
            for x in temp_pass_list:
                password = password + x

            pass_ent.delete(0, END)
            pass_ent.insert(0, password)

        if master_var.get() == 0:
            password = [random.choice(upper_Char) for _ in range(pass_len.get())]
            random.shuffle(password)
            password = "".join(password)
            # print(password)
            pass_ent.delete(0, END)
            pass_ent.insert(0, password)
        # else:
        #     msg.showerror("Error", "Something went wrong")
        elif master_var.get() == 1:
            password = [random.choice(lower_Char) for _ in range(pass_len.get())]
            random.shuffle(password)
            password = "".join(password)
            # print(password)
            pass_ent.delete(0, END)
            pass_ent.insert(0, password)

        elif master_var.get() == 2:
            password = [random.choice(DIGITS) for _ in range(pass_len.get())]
            random.shuffle(password)
            password = "".join(password)
            # print(password)
            pass_ent.delete(0, END)
            pass_ent.insert(0, password)

        elif master_var.get() == 3:
            password = [random.choice(SYMBOLS) for _ in range(pass_len.get())]
            random.shuffle(password)
            password = "".join(password)
            # print(password)
            pass_ent.delete(0, END)
            pass_ent.insert(0, password)


frame_help = Frame(root, bg='#2E0C50')
frame_help.place(x=20, y=560, height=160, width=280)

test_b = PhotoImage(file='E:\\Adv_Project_py\\library_mag\pic\\add.png')

lbl = Label(frame_help, text="1. Use 8 Char for best Password ", font="sans-serif 12", bg="#2E0C50", fg="#fff")
lbl.place(x=5, y=10)

lbl1 = Label(frame_help, text="2. Use Mixed Password for ", font="sans-serif 12", bg="#2E0C50", fg="#fff")
lbl1.place(x=5, y=50)

lbl2 = Label(frame_help, text="  Stronger Password", font="sans-serif 12", bg="#2E0C50", fg="#fff")
lbl2.place(x=5, y=80)

lbl3 = Label(frame_help, text="Made with ❤ By Mayank", font="sans-serif 12", bg="#2E0C50", fg="#fff")
lbl3.place(x=70, y=130)

frame = Frame(root, bg="#2E0C50")
frame.place(x=400, y=110, height=590, width=550)

pass_ent = Entry(frame, textvariable=pass_var, bg="#451C6D", bd=0, font="sans-serif 25 bold", fg="#fff", justify=CENTER)
pass_ent.place(x=30, y=30, height=80, width=500)

pass_length = Label(frame, text="Password Length", font="sans-serif 15 ", bg="#2E0C50", fg="#fff")
pass_length.place(x=30, y=150)

pass_box = Entry(frame, textvariable=pass_len, font="sans-serif 15 ", bd=0)
pass_box.place(x=469, y=148, height=25, width=60)

uppercase = Label(frame, text="Only Uppercase Letters", font="sans-serif 15 ", bg="#2E0C50", fg="#fff")
uppercase.place(x=30, y=195)

upper_checkbox = Radiobutton(frame, bg="#2E0C50", bd=0, variable=master_var, value=0)
upper_checkbox.place(x=500, y=195)

lowercase = Label(frame, text="Only Lowercase Letters", font="sans-serif 15 ", bg="#2E0C50", fg="#fff")
lowercase.place(x=30, y=240)

lower_checkbox = Radiobutton(frame, bg="#2E0C50", bd=0, variable=master_var, value=1)
lower_checkbox.place(x=500, y=240)

numb = Label(frame, text="Only Numbers", font="sans-serif 15 ", bg="#2E0C50", fg="#fff")
numb.place(x=30, y=280)

numb_checkbox = Radiobutton(frame, bg="#2E0C50", bd=0, variable=master_var, value=2)
numb_checkbox.place(x=500, y=282)

symbols = Label(frame, text="Only Symbols", font="sans-serif 15 ", bg="#2E0C50", fg="#fff")
symbols.place(x=30, y=320)

symbols_checkbox = Radiobutton(frame, bg="#2E0C50", bd=0, variable=master_var, value=3)
symbols_checkbox.place(x=500, y=320)

mixed = Label(frame, text="Mixed Password", font="sans-serif 15 ", bg="#2E0C50", fg="#fff")
mixed.place(x=30, y=370)

mixed_checkbox = Radiobutton(frame, bg="#2E0C50", bd=0, variable=master_var, value=4)
mixed_checkbox.place(x=500, y=370)

gen_btn = Button(frame, text="Generate Password", command=pass_gen, bg='#6320EE', bd=0, font="verdana 15 ", fg="#fff")
gen_btn.place(x=30, y=440, height=50, width=500)

reset_btn = Button(frame, text="Reset", command=reset, bd=0, font="sans-serif 11")
reset_btn.place(x=30, y=530, height=40, width=120)

copy_btn = Button(frame, text="Copy", command=copy, bd=0, font="sans-serif 11")
copy_btn.place(x=390, y=528, height=38, width=120)

root.mainloop()
